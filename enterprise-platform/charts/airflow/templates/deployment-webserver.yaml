{{- if .Values.components.webserver.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-webserver
  labels:
    {{- $component := "webserver" }}
    {{- include "airflow.componentLabels" (dict "Values" .Values "Chart" .Chart "Release" .Release "component" $component) | nindent 4 }}
  {{- include "airflow.sccAnnotations" . | nindent 2 }}
spec:
  replicas: {{ .Values.components.webserver.replicas }}
  selector:
    matchLabels:
      {{- include "airflow.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: webserver
  template:
    metadata:
      labels:
        {{- include "airflow.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: webserver
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- include "airflow.metricsAnnotations" . | nindent 8 }}
    spec:
      {{- include "airflow.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      {{- include "airflow.podSecurityContext" . | nindent 6 }}
      initContainers:
        {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          command:
            {{- toYaml .command | nindent 12 }}
          env:
            - name: POSTGRES_HOST
              value: {{ $.Values.database.host | quote }}
            - name: POSTGRES_PORT
              value: {{ $.Values.database.port | quote }}
        {{- end }}
      containers:
        - name: webserver
          {{- include "airflow.securityContext" . | nindent 10 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - airflow
            - webserver
          env:
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: {{ include "airflow.databaseConnectionString" . }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret | default (printf "%s-credentials" (include "airflow.fullname" .)) }}
                  key: {{ .Values.database.secretKey | default "password" }}
            - name: AIRFLOW__KUBERNETES__NAMESPACE
              value: {{ .Release.Namespace }}
            - name: AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME
              value: {{ include "airflow.workerServiceAccountName" . }}
            {{- range .Values.extraEnvVars }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            {{- end }}
          volumeMounts:
            - name: airflow-config
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            {{- if .Values.storage.logs.enabled }}
            - name: airflow-logs
              mountPath: {{ .Values.storage.logs.path }}
            {{- end }}
            {{- if .Values.storage.dags.enabled }}
            - name: airflow-dags
              mountPath: {{ .Values.storage.dags.path }}
            {{- end }}
            {{- range .Values.extraVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
          {{- if .Values.components.webserver.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.components.webserver.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.components.webserver.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.components.webserver.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.components.webserver.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.components.webserver.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.components.webserver.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.components.webserver.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.components.webserver.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.components.webserver.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.components.webserver.resources | nindent 12 }}
        {{- range .Values.sidecars }}
        - name: {{ .name }}
          image: {{ .image }}
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 12 }}
          {{- end }}
          {{- if .volumeMounts }}
          volumeMounts:
            {{- toYaml .volumeMounts | nindent 12 }}
          {{- end }}
        {{- end }}
      volumes:
        - name: airflow-config
          configMap:
            name: {{ include "airflow.fullname" . }}-config
        {{- if .Values.storage.logs.enabled }}
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: {{ include "airflow.fullname" . }}-logs
        {{- end }}
        {{- if .Values.storage.dags.enabled }}
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: {{ include "airflow.fullname" . }}-dags
        {{- end }}
        {{- range .Values.extraVolumes }}
        - name: {{ .name }}
          {{- toYaml .volume | nindent 10 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}